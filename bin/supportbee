#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'optparse'
require 'supportbee'

# This hash will hold all of the options
# parsed from the command-line by
# OptionParser.
options = {}

optparse = OptionParser.new do|opts|
 # Set a banner, displayed at the top
 # of the help screen.
 opts.banner = "Usage: supportbee [object] [options] "

 # Define the options, and what they do
 options[:verbose] = false
 opts.on( '-v', '--verbose', 'Output more information' ) do
   options[:verbose] = true
 end

 options[:logfile] = nil
 opts.on( '-l', '--logfile FILE', 'Write log to FILE' ) do|file|
   options[:logfile] = file
 end

 # This displays the help screen, all programs are
 # assumed to have this option.
 opts.on( '-h', '--help', 'Display this screen' ) do
   puts opts
   exit
 end

 opts.on( '-g', '--group GROUP', 'Display tickets for a particular group') do |group| 
   options[:assigned_group] = group 
 end

 opts.on( '-a', '--agent USER', 'Display tickets for a particular user') do |user|
   options[:assigned_user] = user
 end
end

# Parse the command-line. Remember there are two forms
# of the parse method. The 'parse' method simply parses
# ARGV, while the 'parse!' method parses ARGV and removes
# any options found there, as well as any parameters for
# the options. What's left is the list of files to resize.
optparse.parse!

begin
  cmd = ARGV.shift.strip
rescue NoMethodError
  puts optparse
end

Supportbee::Base.call(cmd, options) if cmd and !cmd.include?('-')
